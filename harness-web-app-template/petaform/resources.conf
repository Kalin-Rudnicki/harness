
network:
  local:
    providers:
      docker: ${CFG.terraform.providers.docker}
    resources:
      - base:
          type: docker_network
          name: app-network
        config:
          name: ${CFG.cfg.network.name}

db:
  local:
    providers:
      docker: ${CFG.terraform.providers.docker}
    resources:
      - base:
          type: docker_volume
          name: db-data
        requireHardDestroy: true
        config:
          name: "${CFG.app.name}--db-data--${ENV.PETAFORM_ENV}"
          driver: "local"
          labels:
            - label: "application"
              value: "postgres"
            - label: "app-name"
              value: "${CFG.app.name}"
            - label: "app-env"
              value: ${ENV.PETAFORM_ENV}
      - base:
          type: docker_image
          name: db-image
        config:
          name: "postgres:latest"
          keep_locally: true
      - base:
          type: docker_container
          name: db
        config:
          image: docker_image.db-image.image_id
          name: "${CFG.app.name}--db--${ENV.PETAFORM_ENV}"
          network_mode: ${CFG.cfg.network.name}
          depends_on:
            - docker_network.app-network
          env:
            - "POSTGRES_DB=${CFG.cfg.db.database}"
            - "POSTGRES_USER=${CFG.cfg.db.username}"
            - "POSTGRES_PASSWORD=${CFG.cfg.db.password}"
          ports:
            - external: ${CFG.cfg.db.port}
              internal: 5432
          labels:
            - label: "application"
              value: "postgres"
            - label: "app-name"
              value: "${CFG.app.name}"
            - label: "app-env"
              value: ${ENV.PETAFORM_ENV}
          mounts:
            - target: "/var/lib/postgresql/data"
              source: docker_volume.db-data.name
              read_only: false
              type: "volume"

web-server:
  local:
    providers:
      docker: ${CFG.terraform.providers.docker}
    resources:
      - base:
          type: docker_container
          name: web-server
        build:
          - cmd: export
            args:
              - BUILD__DOCKER_APP_NAME
              - ${CFG.webServer.name}
          - cmd: export
            args:
              - BUILD__DOCKER_TAG
              - ${CFG.app.version}
          - cmd: bash
            args:
              - build-web-server.sh
        config:
          image: "${CFG.webServer.name}:${CFG.app.version}"
          name: "${CFG.app.name}--web-server--${ENV.PETAFORM_ENV}"
          network_mode: ${CFG.cfg.network.name}
          depends_on:
            - docker_network.app-network
            - docker_container.db
          env:
            - "HARNESS_CFG=${CFG.webServer | json}"
          ports:
            - external: ${CFG.cfg.http.port}
              internal: ${CFG.cfg.http.port}
          labels:
            - label: "application"
              value: "web-server"
            - label: "app-name"
              value: "${CFG.app.name}"
            - label: "app-env"
              value: ${ENV.PETAFORM_ENV}
