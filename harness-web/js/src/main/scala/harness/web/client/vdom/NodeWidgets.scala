package harness.web.client.vdom

val a: CNodeWidget = PNodeWidget("a")
val abbr: CNodeWidget = PNodeWidget("abbr")
val address: CNodeWidget = PNodeWidget("address")
val area: CNodeWidget = PNodeWidget("area")
val article: CNodeWidget = PNodeWidget("article")
val aside: CNodeWidget = PNodeWidget("aside")
val audio: CNodeWidget = PNodeWidget("audio")
val b: CNodeWidget = PNodeWidget("b")
val base: CNodeWidget = PNodeWidget("base")
val bdi: CNodeWidget = PNodeWidget("bdi")
val bdo: CNodeWidget = PNodeWidget("bdo")
val blockquote: CNodeWidget = PNodeWidget("blockquote")
val body: CNodeWidget = PNodeWidget("body")
val br: CWidget = PNodeWidget("br")
val button: CNodeWidget = PNodeWidget("button")
// val canvas: NodeWidget = NodeWidgetASV("canvas") // TODO (KR) : `canvas` will probably require special handling
val caption: CNodeWidget = PNodeWidget("caption")
val cite: CNodeWidget = PNodeWidget("cite")
val code: CNodeWidget = PNodeWidget("code")
val col: CNodeWidget = PNodeWidget("col")
val colGroup: CNodeWidget = PNodeWidget("colgroup")
val data: CNodeWidget = PNodeWidget("data")
val dataList: CNodeWidget = PNodeWidget("datalist")
val dd: CNodeWidget = PNodeWidget("dd")
val del: CNodeWidget = PNodeWidget("del")
val details: CNodeWidget = PNodeWidget("details")
val dfn: CNodeWidget = PNodeWidget("dfn")
val dialog: CNodeWidget = PNodeWidget("dialog")
val div: CNodeWidget = PNodeWidget("div")
val dl: CNodeWidget = PNodeWidget("dl")
val dt: CNodeWidget = PNodeWidget("dt")
val em: CNodeWidget = PNodeWidget("em")
val embed: CNodeWidget = PNodeWidget("embed")
val fieldSet: CNodeWidget = PNodeWidget("fieldset")
val figCaption: CNodeWidget = PNodeWidget("figcaption")
val figure: CNodeWidget = PNodeWidget("figure")
val footer: CNodeWidget = PNodeWidget("footer")
val form: CNodeWidget = PNodeWidget("form")
val head: CNodeWidget = PNodeWidget("head")
val h1: CNodeWidget = PNodeWidget("h1")
val h2: CNodeWidget = PNodeWidget("h2")
val h3: CNodeWidget = PNodeWidget("h3")
val h4: CNodeWidget = PNodeWidget("h4")
val h5: CNodeWidget = PNodeWidget("h5")
val h6: CNodeWidget = PNodeWidget("h6")
val header: CNodeWidget = PNodeWidget("header")
val hr: CNodeWidget = PNodeWidget("hr")
val html: CNodeWidget = PNodeWidget("html")
val i: CNodeWidget = PNodeWidget("i")
val iframe: CNodeWidget = PNodeWidget("iframe")
val img: CNodeWidget = PNodeWidget("img")
val input: CNodeWidget = PNodeWidget("input")
val ins: CNodeWidget = PNodeWidget("ins")
val kbd: CNodeWidget = PNodeWidget("kbd")
val label: CNodeWidget = PNodeWidget("label")
val legend: CNodeWidget = PNodeWidget("legend")
val li: CNodeWidget = PNodeWidget("li")
val link: CNodeWidget = PNodeWidget("link")
val main: CNodeWidget = PNodeWidget("main")
val map: CNodeWidget = PNodeWidget("map")
val mark: CNodeWidget = PNodeWidget("mark")
val meta: CNodeWidget = PNodeWidget("meta")
val meter: CNodeWidget = PNodeWidget("meter")
val nav: CNodeWidget = PNodeWidget("nav")
val noScript: CNodeWidget = PNodeWidget("noscript")
val `object`: CNodeWidget = PNodeWidget("object")
val ol: CNodeWidget = PNodeWidget("ol")
val optGroup: CNodeWidget = PNodeWidget("optgroup")
val option: CNodeWidget = PNodeWidget("option")
val output: CNodeWidget = PNodeWidget("output")
val p: CNodeWidget = PNodeWidget("p")
val param: CNodeWidget = PNodeWidget("param")
val picture: CNodeWidget = PNodeWidget("picture")
val pre: CNodeWidget = PNodeWidget("pre")
val progress: CNodeWidget = PNodeWidget("progress")
val q: CNodeWidget = PNodeWidget("q")
val rp: CNodeWidget = PNodeWidget("rp")
val rt: CNodeWidget = PNodeWidget("rt")
val ruby: CNodeWidget = PNodeWidget("ruby")
val s: CNodeWidget = PNodeWidget("s")
val samp: CNodeWidget = PNodeWidget("samp")
val script: CNodeWidget = PNodeWidget("script")
val section: CNodeWidget = PNodeWidget("section")
val select: CNodeWidget = PNodeWidget("select")
val small: CNodeWidget = PNodeWidget("small")
val source: CNodeWidget = PNodeWidget("source")
val span: CNodeWidget = PNodeWidget("span")
val strong: CNodeWidget = PNodeWidget("strong")
val style: CNodeWidget = PNodeWidget("style")
val sub: CNodeWidget = PNodeWidget("sub")
val summary: CNodeWidget = PNodeWidget("summary")
val sup: CNodeWidget = PNodeWidget("sup")
val svg: CNodeWidget = PNodeWidget("svg")
val table: CNodeWidget = PNodeWidget("table")
val tBody: CNodeWidget = PNodeWidget("tbody")
val td: CNodeWidget = PNodeWidget("td")
val template: CNodeWidget = PNodeWidget("template")
val textarea: CNodeWidget = PNodeWidget("textarea")
val tFoot: CNodeWidget = PNodeWidget("tfoot")
val th: CNodeWidget = PNodeWidget("th")
val tHead: CNodeWidget = PNodeWidget("thead")
val time: CNodeWidget = PNodeWidget("time")
val title: CNodeWidget = PNodeWidget("title")
val tr: CNodeWidget = PNodeWidget("tr")
val track: CNodeWidget = PNodeWidget("track")
val u: CNodeWidget = PNodeWidget("u")
val ul: CNodeWidget = PNodeWidget("ul")
val `var`: CNodeWidget = PNodeWidget("var")
val video: CNodeWidget = PNodeWidget("video")
val wbr: CNodeWidget = PNodeWidget("wbr")
